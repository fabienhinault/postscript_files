%!PS
%%DocumentMedia: a4 595 842 80 () ()

/pageHeight 842 def
/pageWidth 595 def

<< /PageSize [pageWidth pageHeight] >> setpagedevice

/mm { 2.834645669 mul } def

/margin 10 mm def



% arg stack: y x_right x_left  string 
% prints the string at y, centered between x_left and x_right
/centerText {
	dup /Text exch def
	stringwidth pop 2 div /HalfWidth exch def
	dup /Left exch def
	sub 2 div
	HalfWidth sub
	Left add
	exch
	newpath
	moveto
	Text show
} def


/Courier findfont               % load the font, for instance, Courier
0 dict copy begin               % copy it to a new dictionary
/Encoding ISOLatin1Encoding def % replace encoding vector
/MyCourier /FontName def        % replace font name
currentdict end
dup /FID undef                  % remove internal data
/MyCourier exch definefont pop  % define the new font 

/Helvetica findfont               % load the font, for instance, Courier
0 dict copy begin               % copy it to a new dictionary
/Encoding ISOLatin1Encoding def % replace encoding vector
/MyHelvetica /FontName def        % replace font name
currentdict end
dup /FID undef                  % remove internal data
/MyHelvetica exch definefont pop  % define the new font 

/nbCol 2 def
/colWidth pageWidth nbCol div def

%vertical lines
/iVertLine 1 def
nbCol 1 sub
{
  newpath
  iVertLine colWidth mul 
  margin
  moveto
  0 
  pageHeight margin 2 mul sub
  rlineto
  stroke
  iVertLine 1 add
  /iVertLine exch def
} repeat

%horizontal lines
/nbRow 4 def
/rowHeight pageHeight nbRow div def
/iHorizLine 1 def
nbRow 1 sub
{
  newpath
  margin 
  iHorizLine rowHeight mul moveto
  pageWidth margin 2 mul sub
  0 
  rlineto
  stroke
  iHorizLine 1 add
  /iHorizLine exch def
} repeat

% separation lines
/lineWidth pageWidth margin 2 mul sub def


% arg stack: string iCol iRow 
/placeText {
  0.5 add rowHeight mul /y exch def
  dup colWidth mul /x_right exch def
  1 add colWidth mul /x_left exch def
  /text exch def
  y x_right x_left text centerText
} def

% arg stack: all strings in columns iRow, iCol = 0,0 , 1,0 , ... , nRow-1,0 , 1,0, ...
% 0,0 first in stack, nRow-1,nCol-1 last
/fillTable {
  /iCol nbCol 1 sub def
  /iRow 0 def
  nbCol
  {
     nbRow 
     {
       newpath 
       iCol iRow placeText %eats 1 string in stack
       /iRow iRow 1 add def
     } repeat
     /iRow 0 def
     /iCol iCol 1 sub def
  } repeat
} def
/MyHelvetica findfont 20 scalefont setfont

(Aaaaaa AAAAAA aa AAAAAAA)
(Aaaaaaaa Aaaaaaa)
(Aaaaaaaaa AA AAAA)
(Aaaaaa AAAAAA aa AAAAAAA)
(Aaaaaaaa Aaaaaaa)
(Aaaaaaaaa AA AAAA)
(Aaaaaa AAAAAA aa AAAAAAA)
(Aaaaaaaa Aaaaaaa)
fillTable


